{"version":3,"sources":["index.tsx"],"names":["React","useEffect","useState","Animated","Easing","Value","timing","opacityValue","translationValue","Fade","props","style","children","direction","visible","duration","isReady","setIsReady","setValue","animationConfig","easing","linear","opacityConfig","toValue","directionConfig","translationConfig","start","opacity","transform","translateY"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,IAAmBC,MAAnB,QAAiC,yBAAjC;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAoBH,QAA1B;AAUA,MAAMI,YAAY,GAAG,IAAIF,KAAJ,CAAU,CAAV,CAArB;AACA,MAAMG,gBAAgB,GAAG,IAAIH,KAAJ,CAAU,CAAV,CAAzB;;AAEA,SAASI,IAAT,CAAcC,KAAd,EAAgC;AAC9B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA,OAA9B;AAAuCC,IAAAA,QAAQ,GAAG;AAAlD,MAA0DL,KAAhE;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CAACW,QAAb,CAAsBJ,OAAO,GAAG,CAAH,GAAQ,CAArC;AACAG,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACe,OAAL,EAAc;AACd,UAAMG,eAAe,GAAG;AACtBJ,MAAAA,QAAQ,EAAEA,QADY;AAEtBK,MAAAA,MAAM,EAAEhB,MAAM,CAACiB;AAFO,KAAxB;;AAIA,UAAMC,aAAa,mCACdH,eADc;AAEjBI,MAAAA,OAAO,EAAET,OAAO,GAAG,CAAH,GAAO;AAFN,MAAnB;;AAIA,UAAMU,eAAe,GAAGX,SAAS,KAAK,IAAd,GAAqB,CAAC,CAAD,EAAI,CAAJ,CAArB,GAA8B,CAAC,CAAD,EAAI,CAAJ,CAAtD;;AACA,UAAMY,iBAAiB,mCAClBN,eADkB;AAErBI,MAAAA,OAAO,EAAET,OAAO,GAAGU,eAAe,CAAC,CAAD,CAAlB,GAAwBA,eAAe,CAAC,CAAD;AAFlC,MAAvB;;AAKAlB,IAAAA,MAAM,CAACC,YAAD,EAAee,aAAf,CAAN,CAAoCI,KAApC;AACA,QAAIb,SAAJ,EAAeP,MAAM,CAACE,gBAAD,EAAmBiB,iBAAnB,CAAN,CAA4CC,KAA5C;AAChB,GAlBQ,EAkBN,CAACZ,OAAD,EAAUE,OAAV,EAAmBH,SAAnB,EAA8BE,QAA9B,CAlBM,CAAT;AAoBA,sBACE,oBAAC,QAAD,CAAU,IAAV;AACE,IAAA,KAAK;AAEDY,MAAAA,OAAO,EAAEpB,YAFR;AAGDqB,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,UAAU,EAAErB;AAAd,OAAD;AAHV,OAIEG,KAJF;AADP,KASGC,QATH,CADF;AAaD;;AAED,eAAeH,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport type { ViewStyle } from 'react-native';\nimport Animated, { Easing } from 'react-native-reanimated';\n\nconst { Value, timing } = Animated;\n\ntype FadeProps = {\n  visible?: boolean;\n  style?: ViewStyle;\n  children?: any;\n  direction?: 'up' | 'down';\n  duration?: number;\n};\n\nconst opacityValue = new Value(0);\nconst translationValue = new Value(0);\n\nfunction Fade(props: FadeProps) {\n  const { style, children, direction, visible, duration = 200 } = props;\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    opacityValue.setValue(visible ? 1 : (0 as any));\n    setIsReady(true);\n  }, []);\n\n  useEffect(() => {\n    if (!isReady) return;\n    const animationConfig = {\n      duration: duration,\n      easing: Easing.linear,\n    };\n    const opacityConfig = {\n      ...animationConfig,\n      toValue: visible ? 1 : 0,\n    };\n    const directionConfig = direction === 'up' ? [0, 5] : [5, 0];\n    const translationConfig = {\n      ...animationConfig,\n      toValue: visible ? directionConfig[0] : directionConfig[1],\n    };\n\n    timing(opacityValue, opacityConfig).start();\n    if (direction) timing(translationValue, translationConfig).start();\n  }, [visible, isReady, direction, duration]);\n\n  return (\n    <Animated.View\n      style={\n        {\n          opacity: opacityValue,\n          transform: [{ translateY: translationValue }],\n          ...style,\n        } as any\n      }\n    >\n      {children}\n    </Animated.View>\n  );\n}\n\nexport default Fade;\n"]}