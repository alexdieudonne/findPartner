{"version":3,"sources":["utils.ts"],"names":["normalizeSharedElementConfig","sharedElementConfig","id","otherId","animation","other","normalizeSharedElementsConfig","sharedElementsConfig","length","map","isValidNavigationState","state","getActiveRoute","route","routes","index"],"mappings":"+yCAQO,QAASA,CAAAA,4BAAT,CACLC,mBADK,CAEsB,CAC3B,GAAI,MAAOA,CAAAA,mBAAP,GAA+B,QAAnC,CAA6C,CAC3C,MAAO,CACLC,EAAE,CAAED,mBADC,CAELE,OAAO,CAAEF,mBAFJ,CAGLG,SAAS,CAAE,MAHN,CAAP,CAKD,CAND,IAMO,IACGF,CAAAA,EADH,CACwCD,mBADxC,CACGC,EADH,CACOC,OADP,CACwCF,mBADxC,CACOE,OADP,CACgBC,SADhB,CACwCH,mBADxC,CACgBG,SADhB,CAC8BC,KAD9B,uCACwCJ,mBADxC,+BAEL,sBACEC,EAAE,CAAFA,EADF,CAEEC,OAAO,CAAEA,OAAO,EAAID,EAFtB,CAGEE,SAAS,CAAEA,SAAS,EAAI,MAH1B,EAIKC,KAJL,EAMD,CACF,CAEM,QAASC,CAAAA,6BAAT,CACLC,oBADK,CAE8B,CACnC,GAAI,CAACA,oBAAD,EAAyB,CAACA,oBAAoB,CAACC,MAAnD,CAA2D,MAAO,KAAP,CAC3D,MAAOD,CAAAA,oBAAoB,CAACE,GAArB,CAAyBT,4BAAzB,CAAP,CACD,CAED,QAASU,CAAAA,sBAAT,CACEC,KADF,CAE4B,CAC1B,MAAO,SAAWA,CAAAA,KAAX,EAAoB,UAAYA,CAAAA,KAAvC,CACD,CAGM,QAASC,CAAAA,cAAT,CAAwBD,KAAxB,CAA4D,CACjE,GAAME,CAAAA,KAAK,CAAGF,KAAK,CAACG,MAAN,CAAaH,KAAK,CAACI,KAAnB,CAAd,CAEA,GAAIF,KAAK,CAACF,KAAN,EAAeD,sBAAsB,CAACG,KAAK,CAACF,KAAP,CAAzC,CAAwD,CAEtD,MAAOC,CAAAA,cAAc,CAACC,KAAK,CAACF,KAAP,CAArB,CACD,CAED,MAAOE,CAAAA,KAAP,CACD","sourcesContent":["import {\n  SharedElementConfig,\n  SharedElementsConfig,\n  SharedElementStrictConfig,\n  SharedElementsStrictConfig,\n} from './types';\nimport { Route, NavigationState } from '@react-navigation/native';\n\nexport function normalizeSharedElementConfig(\n  sharedElementConfig: SharedElementConfig\n): SharedElementStrictConfig {\n  if (typeof sharedElementConfig === 'string') {\n    return {\n      id: sharedElementConfig,\n      otherId: sharedElementConfig,\n      animation: 'move',\n    };\n  } else {\n    const { id, otherId, animation, ...other } = sharedElementConfig;\n    return {\n      id,\n      otherId: otherId || id,\n      animation: animation || 'move',\n      ...other,\n    };\n  }\n}\n\nexport function normalizeSharedElementsConfig(\n  sharedElementsConfig: SharedElementsConfig | undefined\n): SharedElementsStrictConfig | null {\n  if (!sharedElementsConfig || !sharedElementsConfig.length) return null;\n  return sharedElementsConfig.map(normalizeSharedElementConfig);\n}\n\nfunction isValidNavigationState(\n  state: Partial<NavigationState>\n): state is NavigationState {\n  return 'index' in state && 'routes' in state;\n}\n\n// Gets the current screen from navigation state\nexport function getActiveRoute(state: NavigationState): Route<any> {\n  const route = state.routes[state.index];\n\n  if (route.state && isValidNavigationState(route.state)) {\n    // Dive into nested navigators\n    return getActiveRoute(route.state);\n  }\n\n  return route;\n}\n"]}