{"version":3,"sources":["SharedElementRendererView.tsx"],"names":["SharedElementRendererView","subscription","props","rendererData","addUpdateListener","forceUpdate","undefined","transitions","getTransitions","StyleSheet","absoluteFill","map","index","key","React","PureComponent"],"mappings":"4lCAAA,oDACA,yCACA,qE,+GAQqBA,CAAAA,yB,6tBAKC,iBAClB,KAAKC,YAAL,CAAoB,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,iBAAxB,CAA0C,UAAM,CAClE,MAAI,CAACC,WAAL,GACD,CAFmB,CAApB,CAGD,C,mEAEsB,CACrB,GAAI,KAAKJ,YAAT,CAAuB,CACrB,KAAKA,YAAL,GACA,KAAKA,YAAL,CAAoBK,SAApB,CACD,CACF,C,uCAEQ,CACP,GAAMC,CAAAA,WAAW,CAAG,KAAKL,KAAL,CAAWC,YAAX,CAAwBK,cAAxB,EAApB,CAEA,MACE,qBAAC,iBAAD,EAAM,KAAK,CAAEC,wBAAWC,YAAxB,CAAsC,aAAa,CAAC,MAApD,iDACGH,WAAW,CAACI,GAAZ,CAAgB,cAGfC,KAHe,KAEbC,CAAAA,GAFa,MAEbA,GAFa,CAELX,KAFK,2DAKf,qBAAC,iDAAD,wBAAyB,GAAG,WAAKW,GAAL,aAAYD,KAAZ,CAA5B,EAAqDV,KAArD,mDALe,EAAhB,CADH,CADF,CAWD,C,uCAhCoDY,KAAK,CAACC,a","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { SharedElementTransition } from 'react-native-shared-element';\nimport SharedElementRendererData from './SharedElementRendererData';\nimport { SharedElementEventSubscription } from './types';\n\ntype PropsType = {\n  rendererData: SharedElementRendererData;\n};\n\nexport default class SharedElementRendererView extends React.PureComponent<\n  PropsType\n> {\n  private subscription?: SharedElementEventSubscription;\n\n  componentDidMount() {\n    this.subscription = this.props.rendererData.addUpdateListener(() => {\n      this.forceUpdate();\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      this.subscription();\n      this.subscription = undefined;\n    }\n  }\n\n  render() {\n    const transitions = this.props.rendererData.getTransitions();\n    // console.log('SharedElementRendererView.render: ', transitions);\n    return (\n      <View style={StyleSheet.absoluteFill} pointerEvents=\"none\">\n        {transitions.map((\n          // @ts-ignore\n          { key, ...props },\n          index\n        ) => (\n          <SharedElementTransition key={`${key}:${index}`} {...props} />\n        ))}\n      </View>\n    );\n  }\n}\n"]}