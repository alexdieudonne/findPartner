"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.normalizeSharedElementConfig=normalizeSharedElementConfig;exports.normalizeSharedElementsConfig=normalizeSharedElementsConfig;exports.getActiveRoute=getActiveRoute;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function normalizeSharedElementConfig(sharedElementConfig){if(typeof sharedElementConfig==='string'){return{id:sharedElementConfig,otherId:sharedElementConfig,animation:'move'};}else{var id=sharedElementConfig.id,otherId=sharedElementConfig.otherId,animation=sharedElementConfig.animation,other=(0,_objectWithoutProperties2.default)(sharedElementConfig,["id","otherId","animation"]);return _objectSpread({id:id,otherId:otherId||id,animation:animation||'move'},other);}}function normalizeSharedElementsConfig(sharedElementsConfig){if(!sharedElementsConfig||!sharedElementsConfig.length)return null;return sharedElementsConfig.map(normalizeSharedElementConfig);}function isValidNavigationState(state){return'index'in state&&'routes'in state;}function getActiveRoute(state){var route=state.routes[state.index];if(route.state&&isValidNavigationState(route.state)){return getActiveRoute(route.state);}return route;}
//# sourceMappingURL=utils.js.map